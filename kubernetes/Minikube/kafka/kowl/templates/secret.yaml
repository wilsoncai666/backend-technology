{{- if not .Values.secret.existingSecret -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kowl.fullname" . }}
  labels:
  {{- if .Values.secret.labels }}
  {{ toYaml .Values.secret.labels | nindent 4 }}
  {{- end }}
  {{- include "kowl.labels" . | nindent 4 }}
type: Opaque
data:
  # Set empty defaults, so that we can always mount them as env variable & arg even if they are not used.
  # For this reason we can't use `with` to change the scope.
  # Kafka
  kafka-sasl-password: {{ .Values.secret.kafka.saslPassword | default "" | b64enc | quote }}
  kafka-tls-ca: {{ .Values.secret.kafka.tlsCa | default "" | b64enc | quote }}
  kafka-tls-cert: {{ .Values.secret.kafka.tlsCert | default "" | b64enc | quote }}
  kafka-tls-key: {{ .Values.secret.kafka.tlsKey | default "" | b64enc | quote }}
  kafka-tls-passphrase: {{ .Values.secret.kafka.tlsPassphrase | default "" | b64enc | quote }}
  {{- if eq .Values.image.repository "quay.io/cloudhut/kowl-business" }}
  # CloudHut
  cloudhut-license-token: {{ .Values.secret.cloudhut.licenseToken | default "" | b64enc | quote }}

  # Login
  login-jwt-secret: {{ randAlphaNum 32 | b64enc | quote }}
  login-google-oauth-client-secret: {{ .Values.secret.login.google.clientSecret | default "" | b64enc | quote }}
  login-google-groups-service-account.json: {{ .Values.secret.login.google.groupsServiceAccount | default "" | b64enc | quote }}
  login-github-oauth-client-secret: {{ .Values.secret.login.github.clientSecret | default "" | b64enc | quote }}
  login-github-personal-access-token: {{ .Values.secret.login.github.personalAccessToken | default "" | b64enc | quote }}
  {{- end }}
{{- end }}